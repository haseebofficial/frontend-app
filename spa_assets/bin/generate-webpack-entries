#!/usr/bin/env node
require('@babel/register');
require('@babel/polyfill');

let path = require("path");
let fs = require("fs");
let loadTranslations = require("../translations/translation_loader").loadTranslations;

let allTranslations = loadTranslations(cwdPathTo("lib"));
Object.entries(allTranslations).forEach(([locale, translations]) => {
  let json = JSON.stringify({[locale]: translations});

  let preloaderPath =  cwdPathTo(`webpack_entries/spa/autogenerated/entry.${locale}.js`);
  writeFile(preloaderPath, webpackEntryFileContent(locale, json));
});

function cwdPathTo(file) {
  return path.resolve(process.cwd(), file);
}

function writeFile(file, contents) {
  fs.writeFile(file, contents, {flag: "w+"}, (e) => { if (e) throw e; });
}

function webpackEntryFileContent(locale, translations) {
  return (
    `import { mutateAppTranslations, mutateAppLocale } from "i18n";\n` +
    `mutateAppLocale("${locale}");\n` +
    `mutateAppTranslations(${translations});\n` +
    `import "initialize_spa";`
  );
}